*server.js

// ejs를 쓰겠다. 등록하기
app.set('view engine', 'ejs');

---

EJS : html을 조금 더 쓰기 쉽게 도와주는 템플릿 엔진 -->
    서버데이터 집어넣어서 HTML 만드는 법 
    터미널 : >npm install ejs  

-EJS는 HTML이랑 같지만, 태그 사이에 서버 데이터를 집어 넣을 수 있음

*서버데이터 집어넣는 공식
<%= %>

예)
 <h4>할일 제목 : <%= %></h4>

---

*주의 : EJS 관련 .html 파일은 항상 views 폴더에 들어가 있어야 함
-list.ejs 파일 만들기

---

*server.js
//목표
// /list로 GET 요청으로 접속하면
// 실제 DB에 저장된 데이터들로 예쁘게 꾸며진 HTML을 보여줌
// EJS 템플릿 사용

app.get("/list", function (요청, 응답) {
  // 디비에 저장된 post라는 collection안의 모든 데이터를 꺼내주세요.
  //모든 데이터 가져오기 문법(DB 자료 찾기)
  db.collection("post")
    .find()
    .toArray(function (에러, 결과) {
      console.log(결과);

      // html데이터를 브라우저에 보여줌
      // 찾은 DB 자료를 ejs에 집어넣기
      응답.render("list.ejs", { posts: 결과 });

      // ->list.html로 간다.
    });
});

---

*list.ejs

    <!-- 서버에서 가져온 리스트 -->
    <!-- <h4>할일 제목 : <%= posts[0].제목 %></h4>
    <p>할일 마감날짜 : <%= posts[0].날짜 %></p> 

    <h4>할일 제목 : <%= posts[1].제목 %></h4>
    <p>할일 마감날짜 : <%= posts[1].날짜 %></p>  -->

    <!-- 서버에 있는 데이터 갯수 : posts.length -->
    <% for(var i = 0; i < posts.length ;i++{ %>
      <h4>할일 제목 : <%= posts[i].제목 %></h4>
      <p>할일 마감날짜 : <%= posts[i].날짜 %></p> 
    <% }) %>

---