*server.js

//삭제 요청 만드는 법
app.delete('/delete', function(요청, 응답){
  console.log(요청.body);
  
  //스트링을 숫자로 변환
  요청.body._id = parseInt(요청.body._id);

  // post라는 db collection에서 찾는다.
  // deleteOne : 원하는 게시물 삭제
  // 요청.body 의 내용물을 삭제해주세요. 
  db.collection('post').deleteOne(요청.body, function(에러, 결과){
    console.log('삭제완료');
    // 200 : 요청이 성공했다는 뜻
    // .send : 메시지를 보낼 때 쓰는 함수
    응답.status(200).send({message : '성공했습니다'});
    
    //무조건 실패하는 응답 코드
    // 응답.status(400).send({message : '실패했습니다.'});
  })
})

---

*server.js

//삭제 요청 만드는 법
app.delete('/delete', function(요청, 응답){
  console.log(요청.body);
  
  //스트링을 숫자로 변환
  요청.body._id = parseInt(요청.body._id);

  // post라는 db collection에서 찾는다.
  // deleteOne : 원하는 게시물 삭제
  // 요청.body 의 내용물을 삭제해주세요. 
  db.collection('post').deleteOne(요청.body, function(에러, 결과){
    console.log('삭제완료');
  })
})

---

*list.ejs

<!-- 부트스트랩 사용 : list -->
    <ul class="list-group">
      <% for(var i = 0; i < posts.length; i++){  %>
        <li class="list-group-item">
          <p>글번호 : <%= posts[i]._id %></p>
          <h4>할일 제목 : <%= posts[i].제목 %></h4>
          <p>할일 마감날짜 : <%= posts[i].날짜 %></p>
          <!-- data-id : data-id 속성은 id 고유속성이 브라우저에 나오지 않게 숨기고 싶을 때 사용하는 문법 -->
          <button class="delete" data-id="<%= posts[i]._id %>">삭제</button>
        </li>
      <% } %>
    </ul>

---

*list.ejs
    <!-- jqeury 첨부(아래 있던 것 가져와서 수정) -->
    <script
    src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

---

*list.ejs

    <!-- AJAX 사용법 -->
    <script>

      //.done : AJAX 문법이 성공했을 때 .done을 실행해 주세요.
      // $.ajax({
      //   method : 'DELETE',
      //   url : '요청할 경로', 
      //   data : '요청과 함께 보낼데이터'
      // }).done(function(결과){});

      // $.ajax({
      //   method : 'DELETE',
      //   url : '/delete', 
      //   data : {_id : 1}
      // }).done(function(결과){});

      // class가 delete인 버튼을 클릭하면 실행해달라는 Jquery 문법
      $('.delete').click(function(e){

        // e.target : 내가 누른 요소
        // dataset.id : data-id 값을 가져온다. 
        let 글번호 = e.target.dataset.id;
        // this : 지금 이벤트가 동작하는 곳 : delete. 보통 상황에서는 e.target과 같음
        let 지금누른거 = $(this);

        $.ajax({
          method : 'DELETE',
          url : '/delete', 
          data : {_id : 글번호}
          // .done : 성공시 실행(서버에서 200들어오면 실행)
        }).done((결과)=>{

          console.log('성공했어염');
          //숙제
          //방법1 : 페이지를 강제로 새로고침해주세요.
          //방법2 : 삭제버튼을 누른 <li> 요소를 제거해주세요/안보이게
          //방법2 사용
          //parent : ~의 부모 중 li 태그 찾기
          //fadeOut : 서서히 사라지게 해달라. 
          // console.log(this);
          // 지금누른거.parent('li').fadeOut();
          $(this).parent('li').fadeOut();

          // .fail 함수 : 서버에서 요청이 성공했는지 실패했는지 알려주는 함수(서버에서 400이 들어오면 실행)
        }).fail(function(xhr, textStatus, errorThrown){
          console.log(xhr, textStatus, errorThrown);
        });
      });
    </script>



---
